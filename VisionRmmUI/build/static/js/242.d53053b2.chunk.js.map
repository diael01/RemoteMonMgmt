{"version":3,"file":"static/js/242.d53053b2.chunk.js","mappings":"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","sources":["components/shared-components/Flex/index.js","components/util-components/IntlMessage/index.js","components/util-components/Icon/index.js","configs/NavigationConfig.js","components/layout-components/MenuContent.js","components/layout-components/SideNav.js","components/layout-components/TopNav.js","components/layout-components/Logo.js","components/layout-components/MobileNav.js","components/layout-components/NavItem.js","components/layout-components/NavProfile.js","components/layout-components/HeaderNav/Header.js","components/layout-components/HeaderNav/HeaderWrapper.js","components/layout-components/HeaderNav/Nav.js","components/layout-components/HeaderNav/NavEdge.js","components/layout-components/HeaderNav/index.js","components/layout-components/AppBreadcrumb.js","components/layout-components/PageHeader.js","components/layout-components/Footer.js","layouts/AppLayout.js","utils/index.js"],"sourcesContent":["import styled from '@emotion/styled';\r\n\r\nconst Flex = styled.div(({justifyContent, alignItems, flexDirection, gap, padding, margin}) => {\r\n\r\n\tconst baseStyle = {\r\n\t\tdisplay: 'flex',\r\n\t\tjustifyContent: justifyContent,\r\n\t\talignItems: alignItems,\r\n\t\tgap: typeof gap === 'number' ? `${gap}px` : gap,\r\n\t}\r\n\r\n\tif (flexDirection) {\r\n\t\tbaseStyle.flexDirection = flexDirection\r\n\t}\r\n\r\n\tif (padding) {\r\n\t\tbaseStyle.padding = padding\r\n\t}\r\n\r\n\tif (margin) {\r\n\t\tbaseStyle.margin = margin\r\n\t}\r\n\r\n\treturn {...baseStyle}\r\n})\r\n\r\nexport default Flex\r\n","import React from 'react';\r\nimport { useTranslation } from 'react-i18next'\r\n\r\nconst IntlMessage = ({ id, fallback }) => {\r\n\r\n\tconst { t } = useTranslation()\r\n\r\n\tconst translate = t(id, fallback)\r\n\r\n\treturn <>{translate}</>\r\n}\r\n\r\nexport default IntlMessage;\r\n","import React, { Component } from 'react'\r\n\r\nexport class Icon extends Component {\r\n\trender() {\r\n\t\tconst { type, className  } = this.props;\r\n\t\treturn (\r\n\t\t\t<>{React.createElement(type, { className: className })}</>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default Icon\r\n","import { DashboardOutlined } from '@ant-design/icons';\r\nimport { APP_PREFIX_PATH } from './AppConfig'\r\n\r\n\r\nconst dashBoardNavTree = [{\r\n  key: 'dashboards',\r\n  path: `${APP_PREFIX_PATH}/dashboards`,\r\n  title: 'sidenav.dashboard',\r\n  icon: DashboardOutlined,\r\n  breadcrumb: false,\r\n  isGroupTitle: true,\r\n  submenu: [\r\n    {\r\n      key: 'dashboards-client',\r\n      path: `${APP_PREFIX_PATH}/dashboards/client`,\r\n      title: 'sidenav.dashboard.client',\r\n      icon: DashboardOutlined,\r\n      breadcrumb: false,\r\n      submenu: []\r\n    },\r\n    {\r\n      key: 'dashboards-device',\r\n      path: `${APP_PREFIX_PATH}/dashboards/device`,\r\n      title: 'sidenav.dashboard.device',\r\n      icon: DashboardOutlined,\r\n      breadcrumb: false,\r\n      submenu: []\r\n    }\r\n  ]\r\n}]\r\n\r\nconst navigationConfig = [\r\n  ...dashBoardNavTree\r\n]\r\n\r\nexport default navigationConfig;\r\n","import React, { useMemo } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Menu, Grid } from 'antd';\r\nimport IntlMessage from '../util-components/IntlMessage';\r\nimport Icon from '../util-components/Icon';\r\nimport navigationConfig from '../../configs/NavigationConfig';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { SIDE_NAV_LIGHT, NAV_TYPE_SIDE } from \"../../constants/ThemeConstant\";\r\nimport utils from '../../utils'\r\nimport { onMobileNavToggle } from '../../store/slices/themeSlice';\r\n\r\nconst { useBreakpoint } = Grid;\r\n\r\nconst setLocale = (localeKey, isLocaleOn = true) =>\r\n\tisLocaleOn ? <IntlMessage id={localeKey} /> : localeKey.toString();\r\n\r\nconst setDefaultOpen = (key) => {\r\n\tlet keyList = [];\r\n\tlet keyString = \"\";\r\n\tif (key) {\r\n\t\tconst arr = key.split(\"-\");\r\n\t\tfor (let index = 0; index < arr.length; index++) {\r\n\t\t\tconst elm = arr[index];\r\n\t\t\tindex === 0 ? (keyString = elm) : (keyString = `${keyString}-${elm}`);\r\n\t\t\tkeyList.push(keyString);\r\n\t\t}\r\n\t}\r\n\treturn keyList;\r\n};\r\n\r\nconst MenuItem = ({title, icon, path}) => {\r\n\r\n\tconst dispatch = useDispatch();\r\n\r\n\tconst isMobile = !utils.getBreakPoint(useBreakpoint()).includes('lg');\r\n\r\n\tconst closeMobileNav = () => {\r\n\t\tif (isMobile) {\r\n\t\t\tdispatch(onMobileNavToggle(false))\r\n\t\t}\r\n\t}\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{icon && <Icon type={icon} /> }\r\n\t\t\t<span>{setLocale(title)}</span>\r\n\t\t\t{path && <Link onClick={closeMobileNav} to={path} />}\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nconst getSideNavMenuItem = (navItem) => navItem.map(nav => {\r\n\treturn {\r\n\t\tkey: nav.key,\r\n\t\tlabel: <MenuItem title={nav.title} {...(nav.isGroupTitle ? {} : {path: nav.path, icon: nav.icon})} />,\r\n\t\t...(nav.isGroupTitle ? {type: 'group'} : {}),\r\n\t\t...(nav.submenu.length > 0 ? {children: getSideNavMenuItem(nav.submenu)} : {})\r\n\t}\r\n})\r\n\r\nconst getTopNavMenuItem = (navItem) => navItem.map(nav => {\r\n\treturn {\r\n\t\tkey: nav.key,\r\n\t\tlabel: <MenuItem title={nav.title} icon={nav.icon} {...(nav.isGroupTitle ? {} : {path: nav.path})} />,\r\n\t\t...(nav.submenu.length > 0 ? {children: getTopNavMenuItem(nav.submenu)} : {})\r\n\t}\r\n})\r\n\r\nconst SideNavContent = (props) => {\r\n\r\n\tconst { routeInfo, hideGroupTitle } = props;\r\n\r\n\tconst sideNavTheme = useSelector(state => state.theme.sideNavTheme);\r\n\r\n\tconst menuItems = useMemo(() => getSideNavMenuItem(navigationConfig), []);\r\n\r\n\treturn (\r\n\t\t<Menu\r\n\t\t\tmode=\"inline\"\r\n\t\t\ttheme={sideNavTheme === SIDE_NAV_LIGHT ? \"light\" : \"dark\"}\r\n\t\t\tstyle={{ height: \"100%\", borderInlineEnd: 0 }}\r\n\t\t\tdefaultSelectedKeys={[routeInfo?.key]}\r\n\t\t\tdefaultOpenKeys={setDefaultOpen(routeInfo?.key)}\r\n\t\t\tclassName={hideGroupTitle ? \"hide-group-title\" : \"\"}\r\n\t\t\titems={menuItems}\r\n\t\t/>\r\n\t);\r\n};\r\n\r\nconst TopNavContent = () => {\r\n\r\n\tconst topNavColor = useSelector(state => state.theme.topNavColor);\r\n\r\n\tconst menuItems = useMemo(() => getTopNavMenuItem(navigationConfig), [])\r\n\r\n\treturn (\r\n\t\t<Menu \r\n\t\t\tmode=\"horizontal\" \r\n\t\t\tstyle={{ backgroundColor: topNavColor }}\r\n\t\t\titems={menuItems}\r\n\t\t/>\r\n\t);\r\n};\r\n\r\nconst MenuContent = (props) => {\r\n\treturn props.type === NAV_TYPE_SIDE ? (\r\n\t\t<SideNavContent {...props} />\r\n\t) : (\r\n\t\t<TopNavContent {...props} />\r\n\t);\r\n};\r\n\r\nexport default MenuContent;\r\n","/** @jsxImportSource @emotion/react */\r\nimport { Layout } from 'antd';\r\nimport { connect } from 'react-redux';\r\nimport { SIDE_NAV_WIDTH, SIDE_NAV_DARK, NAV_TYPE_SIDE } from '../../constants/ThemeConstant';\r\nimport { Scrollbars } from 'react-custom-scrollbars-2';\r\nimport MenuContent from './MenuContent';\r\nimport { css } from '@emotion/react';\r\nimport { TEMPLATE, GRAY_SCALE, DARK_MODE } from \"../../constants/ThemeConstant\";\r\n\r\nconst { Sider } = Layout;\r\n\r\nexport const SideNav = ({navCollapsed, sideNavTheme, routeInfo, hideGroupTitle, currentTheme }) => {\r\n  const props = { sideNavTheme, routeInfo , hideGroupTitle }\r\n  return (\r\n    <Sider \r\n      css={css`\r\n        height: calc(100vh - ${TEMPLATE.HEADER_HEIGHT}px); \r\n        position: fixed !important;\r\n        top: ${TEMPLATE.HEADER_HEIGHT}px;\r\n        box-shadow: 0 1px 4px -1px rgba(0,0,0,.15);\r\n        z-index: 999;\r\n        direction: ltr;\r\n        ${currentTheme === 'light' && sideNavTheme !== SIDE_NAV_DARK ? `background-color: ${GRAY_SCALE.WHITE} !important;`  : `background-color: ${TEMPLATE.SIDE_NAV_DARK_BG_COLOR} !important;`}\r\n        ${currentTheme === 'dark' && sideNavTheme !== SIDE_NAV_DARK ? `background-color: ${DARK_MODE.BG_COLOR} !important`  : ``}\r\n        ${currentTheme === 'dark' && sideNavTheme === SIDE_NAV_DARK ? `background-color: ${TEMPLATE.SIDE_NAV_DARK_BG_COLOR} !important`  : ``}\r\n      `}\r\n      className={`side-nav ${sideNavTheme === SIDE_NAV_DARK? 'side-nav-dark' : ''}`} \r\n      width={SIDE_NAV_WIDTH} \r\n      collapsed={navCollapsed}\r\n    >\r\n      <Scrollbars autoHide>\r\n        <MenuContent \r\n          type={NAV_TYPE_SIDE} \r\n          {...props}\r\n        />\r\n      </Scrollbars>\r\n    </Sider>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n  const { navCollapsed, sideNavTheme, currentTheme } =  theme;\r\n  return { navCollapsed, sideNavTheme, currentTheme }\r\n};\r\n\r\nexport default connect(mapStateToProps)(SideNav);\r\n","import React from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { NAV_TYPE_TOP } from '../../constants/ThemeConstant';\r\nimport utils from '../../utils'\r\nimport MenuContent from './MenuContent'\r\n\r\nexport const TopNav = ({topNavColor,}) => {\r\n\tconst props = { topNavColor }\r\n\treturn (\r\n\t\t<div className={`top-nav ${utils.getColorContrast(topNavColor)}`} style={{backgroundColor: topNavColor}}>\r\n\t\t\t<div className=\"top-nav-wrapper\">\r\n\t\t\t\t<MenuContent\r\n\t\t\t\t\ttype={NAV_TYPE_TOP} \r\n\t\t\t\t\t{...props}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n  const { topNavColor } =  theme;\r\n  return { topNavColor }\r\n};\r\n\r\nexport default connect(mapStateToProps)(TopNav);\r\n","import React from 'react'\r\nimport { SIDE_NAV_WIDTH, SIDE_NAV_COLLAPSED_WIDTH, NAV_TYPE_TOP } from '../../constants/ThemeConstant';\r\nimport { APP_NAME } from '../../configs/AppConfig';\r\nimport { useSelector } from 'react-redux';\r\nimport utils from '../../utils';\r\nimport { Grid } from 'antd';\r\nimport styled from '@emotion/styled';\r\nimport { TEMPLATE } from '../../constants/ThemeConstant';\r\n\r\nconst LogoWrapper = styled.div(() => ({\r\n\theight: TEMPLATE.HEADER_HEIGHT,\r\n\tdisplay: 'flex',\r\n\talignItems: 'center',\r\n\tpadding: '0 1rem',\r\n\tbackgroundColor: 'transparent',\r\n\ttransition: 'all .2s ease',\r\n}));\r\n\r\nconst { useBreakpoint } = Grid;\r\n\r\nexport const Logo = ({ mobileLogo, logoType }) => {\r\n\r\n\tconst isMobile = !utils.getBreakPoint(useBreakpoint()).includes('lg');\r\n\r\n\tconst navCollapsed = useSelector(state => state.theme.navCollapsed);\r\n\tconst navType = useSelector(state => state.theme.navType);\r\n\r\n\tconst getLogoWidthGutter = () => {\r\n\t\tconst isNavTop = navType === NAV_TYPE_TOP ? true : false\r\n\t\tif(isMobile && !mobileLogo) {\r\n\t\t\treturn 0\r\n\t\t}\r\n\t\tif(isNavTop) {\r\n\t\t\treturn 'auto'\r\n\t\t}\r\n\t\tif(navCollapsed) {\r\n\t\t\treturn `${SIDE_NAV_COLLAPSED_WIDTH}px`\r\n\t\t} else {\r\n\t\t\treturn `${SIDE_NAV_WIDTH}px`\r\n\t\t}\r\n\t}\r\n\t\r\n\tconst getLogo = () => {\r\n\t\tif(logoType === 'light') {\r\n\t\t\tif(navCollapsed) {\r\n\t\t\treturn '/img/logo-sm-white.png'\r\n\t\t\t}\r\n\t\t\treturn '/img/logo-white.png'\r\n\t\t}\r\n\t\r\n\t\tif (navCollapsed) {\r\n\t\t\treturn '/img/logo-sm.png'\r\n\t\t}\r\n\t\treturn '/img/logo.png'\r\n\t}\r\n\r\n\treturn (\r\n\t\t<LogoWrapper className={isMobile && !mobileLogo ? 'd-none' : 'logo'} style={{width: `${getLogoWidthGutter()}`}}>\r\n\t\t\t<img src={getLogo()} alt={`${APP_NAME} logo`}/>\r\n\t\t</LogoWrapper>\r\n\t)\r\n}\r\n\r\nexport default Logo;\r\n","import React from \"react\";\r\nimport { Drawer } from \"antd\";\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { NAV_TYPE_SIDE } from \"../../constants/ThemeConstant\";\r\nimport { Scrollbars } from \"react-custom-scrollbars-2\";\r\nimport MenuContent from \"./MenuContent\";\r\nimport { onMobileNavToggle } from '../../store/slices/themeSlice';\r\nimport Logo from \"./Logo\";\r\nimport Flex from \"../shared-components/Flex\";\r\nimport { ArrowLeftOutlined } from \"@ant-design/icons\";\r\n\r\nexport const MobileNav = ({\r\n\trouteInfo,\r\n\thideGroupTitle\r\n}) => {\r\n\r\n\tconst dispatch = useDispatch();\r\n\r\n\tconst sideNavTheme = useSelector(state => state.theme.sideNavTheme);\r\n\tconst mobileNav = useSelector(state => state.theme.mobileNav);\r\n\r\n\tconst menuContentprops = { sideNavTheme, routeInfo, hideGroupTitle };\r\n\r\n\tconst onClose = () => {\r\n\t\tdispatch(onMobileNavToggle(false));\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Drawer\r\n\t\t\tplacement=\"left\"\r\n\t\t\tclosable={false}\r\n\t\t\tonClose={onClose}\r\n\t\t\topen={mobileNav}\r\n\t\t\tbodyStyle={{ padding: 5 }}\r\n\t\t\twidth={300}\r\n\t\t>\r\n\t\t\t<Flex flexDirection=\"column\" className=\"h-100\">\r\n\t\t\t\t<Flex justifyContent=\"space-between\" alignItems=\"center\">\r\n\t\t\t\t\t<Logo mobileLogo={true} />\r\n\t\t\t\t\t<div className=\"px-3\" onClick={() => onClose()}>\r\n\t\t\t\t\t\t<ArrowLeftOutlined />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Flex>\r\n\t\t\t\t<div className=\"h-100\">\r\n\t\t\t\t\t<Scrollbars autoHide>\r\n\t\t\t\t\t\t<MenuContent type={NAV_TYPE_SIDE} {...menuContentprops} />\r\n\t\t\t\t\t</Scrollbars>\r\n\t\t\t\t</div>\r\n\t\t\t</Flex>\r\n\t\t</Drawer>\r\n\t);\r\n};\r\n\r\nexport default MobileNav;\r\n","import styled from '@emotion/styled';\r\nimport { \r\n    GRAY_SCALE,\r\n} from '../../constants/ThemeConstant'\r\nimport { baseTheme, rgba } from '../../configs/ThemeConfig'\r\nimport { MEDIA_QUERIES } from '../../constants/ThemeConstant'\r\n\r\nconst isDark = (mode) => {\r\n    return mode === 'dark'\r\n}\r\n\r\nconst NavItem = styled('div')`\r\n    display: flex;\r\n    align-items: center;\r\n    line-height: 1.5;\r\n    cursor: pointer;\r\n    padding: 0 1rem;\r\n    color: ${props => isDark(props.mode) ?  GRAY_SCALE.GRAY : rgba(GRAY_SCALE.WHITE, 0.85) };\r\n\r\n    @media ${MEDIA_QUERIES.MOBILE} {\r\n\t\tpadding: 0 0.75rem;\r\n\t}\r\n\r\n    .ant-badge {\r\n        color: ${props => isDark(props.mode) ?  GRAY_SCALE.GRAY : rgba(GRAY_SCALE.WHITE, 0.85) };\r\n    }\r\n\r\n    .nav-icon {\r\n        font-size: 1.25rem;\r\n    }\r\n\r\n    &:hover,\r\n    &.ant-dropdown-open,\r\n    &.ant-popover-open {\r\n        > * {\r\n            color: ${props => isDark(props.mode) ? baseTheme.colorPrimary : GRAY_SCALE.WHITE};\r\n        }\r\n\r\n        .profile-text {\r\n            color: ${props => isDark(props.mode) ? GRAY_SCALE.GRAY : GRAY_SCALE.WHITE};\r\n        }\r\n    }\r\n`\r\n\r\nexport default NavItem","import { Dropdown } from 'antd';\r\nimport { useEffect, useState } from 'react';\r\nimport NavItem from './NavItem';\r\nimport styled from '@emotion/styled';\r\nimport { FONT_SIZES, FONT_WEIGHT, MEDIA_QUERIES, SPACER } from '../../constants/ThemeConstant';\r\nimport useFetchUser from '../../hooks/UserHooks';\r\n\r\nconst Icon = styled.div(() => ({\r\n\tfontSize: FONT_SIZES.LG\r\n}))\r\n\r\nconst Profile = styled.div(() => ({\r\n\tdisplay: 'flex',\r\n\talignItems: 'center'\r\n}))\r\n\r\nconst UserInfo = styled('div')`\r\n\tpadding-left: ${SPACER[2]};\r\n\r\n\t@media ${MEDIA_QUERIES.MOBILE} {\r\n\t\tdisplay: none\r\n\t}\r\n`\r\n\r\nconst Name = styled.div(() => ({\r\n\tfontWeight: FONT_WEIGHT.SEMIBOLD\r\n}))\r\n\r\nconst Title = styled.span(() => ({\r\n\topacity: 0.8\r\n}))\r\n\r\nconst MenuItemSignOut = (props) => \r\n{\r\n\tconst { data, isSuccess } = useFetchUser();\t\t\t\r\n\tconst [url,setUrl] = useState(\"\");\r\n \tuseEffect(() => {\r\n\t\tif(data) {     \t\t\t\t\t\r\n\t\t\tsetUrl(data.find((n)=>n.type===\"bff:logout_url\")?.value);\t\t\t\t\r\n\t\t}\r\n\t });  \r\n\r\n\tconst handleSignOut = () => {\t\r\n\t\tconsole.log(\"url:\"+url);\r\n\t\tsessionStorage.removeItem(AUTH_TOKEN);\r\n\t\treturn false;\t\t\r\n\t} \r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t<a href={url} onClick={handleSignOut}>Sign Out</a>\t\r\n\t</div>\r\n\t\t\t\t\t\t\r\n\t)\r\n}\r\n\r\nconst items = [\r\n\t{\r\n\t\tkey: 'Sign Out',\r\n\t\tlabel: <MenuItemSignOut label=\"Sign Out\" />,\r\n\t}\r\n]\r\n\r\nexport const NavProfile = ({mode}) => {\r\n\tconst { data, isSuccess } = useFetchUser();\t\r\n\tconst [name,setName] = useState(\"\");\r\n\tconst [role,setRole] = useState(\"\");\r\n\r\n \tuseEffect(() => {\r\n\t\tif(data) {     \t\t\r\n\t\t\tsetName(data.find((n)=>n.type===\"name\")?.value);\r\n\t\t\tsetRole(data.find((n)=>n.type===\"role\")?.value);\t\t\t\t\r\n\t\t}\r\n\t });  \t \r\n\treturn (\r\n\t\t<Dropdown placement=\"bottomRight\" menu={{items}} trigger={[\"click\"]}>\r\n\t\t\t<NavItem mode={mode}>\t\t\t\t\t\r\n\t\t\t\t<Profile>\t\t\t\t\t\r\n\t\t\t\t\t<UserInfo className=\"profile-text\">\r\n\t\t\t\t\t\t<Name>{name}</Name>\r\n\t\t\t\t\t\t<Title>{role}</Title>\r\n\t\t\t\t\t</UserInfo>\r\n\t\t\t\t</Profile>\r\n\t\t\t</NavItem>\r\n\t\t</Dropdown>\r\n\t);\r\n}\r\n\r\nexport default NavProfile\r\n","import styled from '@emotion/styled';\r\nimport { TEMPLATE } from '../../../constants/ThemeConstant';\r\n\r\nconst Header = styled.div(({headerNavColor, isDarkTheme}) => ({\r\n\tposition: 'fixed',\r\n\twidth: '100%',\r\n\tleft: 0,\r\n\tzIndex: 1000,\r\n\tdisplay: 'flex',\r\n\tflex: '0 0 auto',\r\n\theight: TEMPLATE.HEADER_HEIGHT,\r\n\tlineHeight: `${TEMPLATE.HEADER_HEIGHT}px`,\r\n\tbackgroundColor: headerNavColor,\r\n\tboxShadow: isDarkTheme ? '0 1px 8px -1px rgb(0 0 0 / 75%)' : '0 1px 4px -1px rgb(0 0 0 / 15%)'\r\n}))\r\n\r\n\r\nexport default Header","import styled from '@emotion/styled';\r\n\r\nconst HeaderWrapper = styled.div(({isNavTop}) => ({\r\n\twidth: '100%',\r\n\tdisplay: 'flex',\r\n\t...isNavTop ? {maxWidth: isNavTop, margin: 'auto'} : {}\r\n}))\r\n\r\n\r\nexport default HeaderWrapper","import styled from '@emotion/styled';\r\n\r\nconst Nav = styled.div(({navWidth}) => ({\r\n\tdisplay: 'flex',\r\n\tjustifyContent: 'space-between',\r\n\tposition: 'relative',\r\n\ttransition: 'all .2s ease',\r\n\twidth: `calc(100% - ${navWidth})`\r\n}))\r\n\r\nexport default Nav","import styled from '@emotion/styled';\r\n\r\nconst NavEdge = styled.div(({left, right}) => {\r\n\r\n\tif (left) {\r\n\t\treturn {\r\n\t\t\tdisplay: 'flex'\r\n\t\t}\r\n\t}\r\n\r\n\tif (right) {\r\n\t\treturn {\r\n\t\t\tmarginLeft: 'auto',\r\n\t\t\tpadding: '0 1rem',\r\n\t\t\tdisplay: 'flex'\r\n\t\t}\r\n\t}\r\n\r\n\treturn {}\r\n})\r\n\r\nexport default NavEdge","/** @jsxImportSource @emotion/react */\r\nimport { useState, useEffect, useMemo } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { TEMPLATE } from '../../../constants/ThemeConstant';\r\nimport { MenuFoldOutlined, MenuUnfoldOutlined, SearchOutlined } from '@ant-design/icons';\r\nimport Logo from '../Logo';\r\n//import NavNotification from '../NavNotification';\r\nimport NavProfile from '../NavProfile';\r\n//import NavLanguage from '../NavLanguage';\r\n//import NavPanel from '../NavPanel';\r\n//import NavSearch  from '../NavSearch';\r\n//import SearchInput from '../NavSearch/SearchInput';\r\nimport Header from './Header';\r\nimport HeaderWrapper from './HeaderWrapper';\r\nimport Nav from './Nav'\r\nimport NavEdge from './NavEdge';\r\nimport NavItem from '../NavItem';\r\nimport { toggleCollapsedNav, onMobileNavToggle } from '../../../store/slices/themeSlice';\r\nimport { NAV_TYPE_TOP, SIDE_NAV_COLLAPSED_WIDTH, SIDE_NAV_WIDTH } from '../../../constants/ThemeConstant';\r\nimport utils from '../../../utils'\r\n\r\nexport const HeaderNav = props => {\r\n\r\n\tconst { isMobile } = props;\r\n\r\n\tconst [searchActive, setSearchActive] = useState(false);\r\n\r\n\tconst dispatch = useDispatch()\r\n\r\n\tconst navCollapsed = useSelector(state => state.theme.navCollapsed)\r\n\tconst mobileNav = useSelector(state => state.theme.mobileNav)\r\n\tconst navType = useSelector(state => state.theme.navType)\r\n\tconst headerNavColor = useSelector(state => state.theme.headerNavColor)\r\n\tconst currentTheme = useSelector(state => state.theme.currentTheme)\r\n\tconst direction = useSelector(state => state.theme.direction)\r\n\r\n\tconst onSearchActive = () => {\r\n\t\tsetSearchActive(true)\r\n\t}\r\n\r\n\tconst onSearchClose = () => {\r\n\t\tsetSearchActive(false)\r\n\t}\r\n\r\n\tconst onToggle = () => {\r\n\t\tif(!isMobile) {\r\n\t\t\tdispatch(toggleCollapsedNav(!navCollapsed))\r\n\t\t} else {\r\n\t\t\tdispatch(onMobileNavToggle(!mobileNav))\r\n\t\t}\r\n\t}\r\n\r\n\tconst isNavTop = navType === NAV_TYPE_TOP \r\n\tconst isDarkTheme = currentTheme === 'dark'\r\n\r\n    const navMode = useMemo(() => {\r\n\t\tif(!headerNavColor) {\r\n\t\t\treturn utils.getColorContrast(isDarkTheme ? '#000000' : '#ffffff' )\r\n\t\t}\r\n\t\treturn utils.getColorContrast(headerNavColor);\r\n\t}, [isDarkTheme, headerNavColor])\r\n\r\n\tconst navBgColor = isDarkTheme ? TEMPLATE.HEADER_BG_DEFAULT_COLOR_DARK : TEMPLATE.HEADER_BG_DEFAULT_COLOR_LIGHT;\r\n\r\n\tconst getNavWidth = () => {\r\n\t\tif(isNavTop || isMobile) {\r\n\t\t\treturn '0px';\r\n\t\t}\r\n\t\tif(navCollapsed) {\r\n\t\t\treturn `${SIDE_NAV_COLLAPSED_WIDTH}px`;\r\n\t\t} else {\r\n\t\t\treturn `${SIDE_NAV_WIDTH}px`;\r\n\t\t}\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tif(!isMobile) {\r\n\t\t\tonSearchClose();\r\n\t\t}\r\n\t})\r\n\r\n\t\r\n\treturn (\r\n\t\t<Header isDarkTheme={isDarkTheme} headerNavColor={headerNavColor || navBgColor}>\r\n\t\t\t<HeaderWrapper isNavTop={isNavTop}>\r\n\t\t\t\t<Logo logoType={navMode}/>\r\n\t\t\t\t<Nav navWidth={getNavWidth()}>\r\n\t\t\t\t\t<NavEdge left>\r\n\t\t\t\t\t\t<NavItem onClick={onToggle} mode={navMode}>\r\n\t\t\t\t\t\t\t<div className=\"d-flex align-items-center\">\r\n\t\t\t\t\t\t\t\t{navCollapsed || isMobile ? <MenuUnfoldOutlined className=\"nav-icon\" /> : <MenuFoldOutlined className=\"nav-icon\" />}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</NavItem>\r\n\t\t\t\t\t</NavEdge>\r\n\t\t\t\t\t<NavEdge right>\r\n\t\t\t\t\t\t<NavProfile mode={navMode} />\r\n\t\t\t\t\t</NavEdge>\r\n\t\t\t\t</Nav>\r\n\t\t\t</HeaderWrapper>\r\n\t\t</Header>\r\n\t)\r\n}\r\n\r\nexport default HeaderNav;","import React, { Component } from 'react';\r\nimport { Link, useLocation } from 'react-router-dom';\r\nimport { Breadcrumb } from 'antd';\r\nimport navigationConfig from \"../../configs/NavigationConfig\";\r\nimport IntlMessage from '../util-components/IntlMessage';\r\n\r\nlet breadcrumbData = { \r\n\t'/app' : <IntlMessage id=\"home\" />\r\n};\r\n\r\nnavigationConfig.forEach((elm, i) => {\r\n\tconst assignBreadcrumb = (obj) => breadcrumbData[obj.path] = <IntlMessage id={obj.title} />;\r\n\tassignBreadcrumb(elm);\r\n\tif (elm.submenu) {\r\n\t\telm.submenu.forEach( elm => {\r\n\t\t\tassignBreadcrumb(elm)\r\n\t\t\tif(elm.submenu) {\r\n\t\t\t\telm.submenu.forEach( elm => {\r\n\t\t\t\t\tassignBreadcrumb(elm)\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n})\r\n\r\nconst BreadcrumbRoute = props => {\r\n\tconst location = useLocation();\r\n\tconst pathSnippets = location.pathname.split('/').filter(i => i);\r\n\tconst breadcrumbItems = pathSnippets.map((_, index) => {\r\n\t\tconst url = `/${pathSnippets.slice(0, index + 1).join('/')}`;\r\n\t\treturn {\r\n\t\t\ttitle: <Link to={url}>{breadcrumbData[url]}</Link>\r\n\t\t}\r\n\t});\r\n  \r\n\treturn (\r\n\t\t<Breadcrumb items={breadcrumbItems} />\r\n\t);\r\n};\r\n\r\nexport class AppBreadcrumb extends Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<BreadcrumbRoute />\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default AppBreadcrumb\r\n","/** @jsxImportSource @emotion/react */\r\nimport AppBreadcrumb from './AppBreadcrumb';\r\nimport IntlMessage from '../util-components/IntlMessage';\r\nimport { css } from '@emotion/react';\r\nimport { MEDIA_QUERIES } from '../../constants/ThemeConstant';\r\n\r\nexport const PageHeader = ({ title, display }) => {\r\n\treturn (\r\n\t\tdisplay ? (\r\n\t\t\t<div\r\n\t\t\t\tcss={css`\r\n\t\t\t\t\talign-items: center;\r\n\t\t\t\t\tmargin-bottom: 1rem;\r\n\r\n\t\t\t\t\t@media ${MEDIA_QUERIES.LAPTOP_ABOVE} {\r\n\t\t\t\t\t\tdisplay: flex;\r\n\t\t\t\t\t}\r\n\t\t\t\t`}\r\n\t\t\t>\r\n\t\t\t\t<h3 className=\"mb-0 mr-3 font-weight-semibold\">\r\n\t\t\t\t\t<IntlMessage id={title? title : 'home'}/>\r\n\t\t\t\t</h3>\r\n\t\t\t\t<AppBreadcrumb />\r\n\t\t\t</div>\r\n\t\t)\r\n\t\t: null\r\n\t)\r\n}\r\n\r\nexport default PageHeader","/** @jsxImportSource @emotion/react */\r\nimport React from 'react'\r\nimport { APP_NAME } from '../../configs/AppConfig';\r\nimport { css } from '@emotion/react';\r\nimport { TEMPLATE, MEDIA_QUERIES, DARK_MODE, BORDER } from '../../constants/ThemeConstant'\r\nimport { useSelector } from 'react-redux';\r\n\r\nexport default function Footer() {\r\n\r\n\tconst currentTheme = useSelector(state => state.theme.currentTheme)\r\n\r\n\treturn (\r\n\t\t<footer css={css`\r\n\t\t\theight: ${TEMPLATE.FOOTER_HEIGHT}px;\r\n\t\t\tdisplay: flex;\r\n\t\t\tmargin: 0 ${TEMPLATE.LAYOUT_CONTENT_GUTTER}px;\r\n\t\t\talign-items: center;\r\n\t\t\tborder-top: 1px solid ${currentTheme === 'dark' ? DARK_MODE.BORDER_BASE_COLOR : BORDER.BASE_COLOR };\r\n\t\t\tjustify-content: space-between;\r\n\t\t\r\n\t\t\t@media ${MEDIA_QUERIES.MOBILE} {\r\n\t\t\t\tjustify-content: center;\r\n       \t\t\tflex-direction: column;\r\n\t\t\t}\r\n\t\t`}>\r\n\t\t\t<span>Copyright  &copy;  {`${new Date().getFullYear()}`} <span className=\"font-weight-semibold\">{`${APP_NAME}`}</span> All rights reserved.</span>\r\n\t\t\t<div>\r\n\t\t\t\t<a className=\"text-gray\" href=\"/#\" onClick={e => e.preventDefault()}>Term & Conditions</a>\r\n\t\t\t\t<span className=\"mx-2 text-muted\"> | </span>\r\n\t\t\t\t<a className=\"text-gray\" href=\"/#\" onClick={e => e.preventDefault()}>Privacy & Policy</a>\r\n\t\t\t</div>\r\n\t\t</footer>\r\n\t)\r\n}\r\n\r\n","import React, { Suspense } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { useLocation } from 'react-router-dom';\r\nimport SideNav from '../components/layout-components/SideNav';\r\nimport TopNav from '../components/layout-components/TopNav';\r\nimport Loading from '../components/shared-components/Loading';\r\nimport MobileNav from '../components/layout-components/MobileNav'\r\nimport HeaderNav from '../components/layout-components/HeaderNav';\r\nimport PageHeader from '../components/layout-components/PageHeader';\r\nimport Footer from '../components/layout-components/Footer';\r\nimport { Layout, Grid,} from 'antd';\r\nimport navigationConfig from '../configs/NavigationConfig';\r\nimport { TEMPLATE, MEDIA_QUERIES } from '../constants/ThemeConstant';\r\nimport styled from '@emotion/styled';\r\nimport utils from '../utils';\r\n\r\nconst { Content } = Layout;\r\nconst { useBreakpoint } = Grid;\r\n\r\nconst AppContent = styled('div')`\r\n    padding: ${TEMPLATE.LAYOUT_CONTENT_GUTTER}px;\r\n    margin-top: ${TEMPLATE.HEADER_HEIGHT}px;\r\n    min-height: calc(100vh - ${TEMPLATE.CONTENT_HEIGHT_OFFSET}px);\r\n    position: relative;\r\n\r\n    ${props => props.isNavTop ? `\r\n        max-width: ${TEMPLATE.CONTENT_MAX_WIDTH}px;\r\n        margin-left: auto;\r\n        margin-right: auto;\r\n        width: 100%;\r\n\r\n        @media ${MEDIA_QUERIES.DESKTOP} { \r\n            margin-top: ${TEMPLATE.HEADER_HEIGHT + TEMPLATE.TOP_NAV_HEIGHT}px;\r\n            min-height: calc(100vh - ${TEMPLATE.CONTENT_HEIGHT_OFFSET}px - ${TEMPLATE.TOP_NAV_HEIGHT}px);\r\n        }\r\n    ` : '' }\r\n\r\n    @media ${MEDIA_QUERIES.MOBILE} { \r\n        padding: ${TEMPLATE.LAYOUT_CONTENT_GUTTER_SM}px;\r\n    }\r\n`\r\n\r\nexport const AppLayout = ({ navCollapsed, navType, direction, children }) => {\r\n\r\n    const location = useLocation();\r\n\r\n    const currentRouteInfo = utils.getRouteInfo(navigationConfig, location.pathname)\r\n    const screens = utils.getBreakPoint(useBreakpoint());\r\n    const isMobile = screens.length === 0 ? false : !screens.includes('lg')\r\n    const isNavSide = navType === TEMPLATE.NAV_TYPE_SIDE\r\n    const isNavTop = navType === TEMPLATE.NAV_TYPE_TOP\r\n    const getLayoutGutter = () => {\r\n        if(isNavTop || isMobile) {\r\n            return 0\r\n        }\r\n        return navCollapsed ? TEMPLATE.SIDE_NAV_COLLAPSED_WIDTH : TEMPLATE.SIDE_NAV_WIDTH\r\n    }\r\n\r\n    const getLayoutDirectionGutter = () => {\r\n        if(direction === TEMPLATE.DIR_LTR) {\r\n            return {paddingLeft: getLayoutGutter()}\r\n        }  \r\n        if(direction === TEMPLATE.DIR_RTL) {\r\n            return {paddingRight: getLayoutGutter()}\r\n        }\r\n        return {paddingLeft: getLayoutGutter()}\r\n    }\r\n\r\n    return (\r\n        <Layout>\r\n            <HeaderNav isMobile={isMobile}/>\r\n            {(isNavTop && !isMobile) ? <TopNav routeInfo={currentRouteInfo}/> : null}\r\n            <Layout>\r\n                {(isNavSide && !isMobile) ? <SideNav routeInfo={currentRouteInfo}/> : null }\r\n                <Layout style={getLayoutDirectionGutter()}>\r\n                    <AppContent>\r\n                        <PageHeader display={currentRouteInfo?.breadcrumb} title={currentRouteInfo?.title} />\r\n                        <Content className=\"h-100\">\r\n                            <Suspense fallback={<Loading cover=\"content\"/>}>\r\n                                {children}\r\n                            </Suspense>\r\n                        </Content>\r\n                    </AppContent>\r\n                    <Footer />\r\n                </Layout>\r\n            </Layout>\r\n            {isMobile && <MobileNav />}\r\n        </Layout>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n    const { navCollapsed, navType, locale } =  theme;\r\n    return { navCollapsed, navType, locale }\r\n};\r\n\r\nexport default connect(mapStateToProps)(React.memo(AppLayout));","class Utils {\r\n\r\n\t/**\r\n\t * Get first character from first & last sentences of a username\r\n\t * @param {String} name - Username\r\n\t * @return {String} 2 characters string\r\n\t */\r\n\tstatic getNameInitial(name) {\r\n\t\tlet initials = name.match(/\\b\\w/g) || [];\r\n\t\treturn ((initials.shift() || '') + (initials.pop() || '')).toUpperCase();\r\n\t}\r\n\r\n\t/**\r\n\t * Get current path related object from Navigation Tree\r\n\t * @param {Array} navTree - Navigation Tree from directory 'configs/NavigationConfig'\r\n\t * @param {String} path - Location path you looking for e.g '/app/dashboards/analytic'\r\n\t * @return {Object} object that contained the path string\r\n\t */\r\n\tstatic getRouteInfo(navTree, path) {\r\n\t\tif( navTree.path === path ){\r\n\t\t  \treturn navTree;\r\n\t\t}\r\n\t\tlet route; \r\n\t\tfor (let p in navTree) {\r\n\t\t\tif( navTree.hasOwnProperty(p) && typeof navTree[p] === 'object' ) {\r\n\t\t\t\troute = this.getRouteInfo(navTree[p], path);\r\n\t\t\t\tif(route){\r\n\t\t\t\t\treturn route;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn route;\r\n\t}\t\r\n\r\n\t/**\r\n\t * Get accessible color contrast\r\n\t * @param {String} hex - Hex color code e.g '#3e82f7'\r\n\t * @return {String} 'dark' or 'light'\r\n\t */\r\n\tstatic getColorContrast(hex){\r\n\t\tif(!hex) {\r\n\t\t\treturn 'dark'\r\n\t\t}\r\n\t\tconst threshold = 130;\r\n\t\tconst hRed = hexToR(hex);\r\n\t\tconst hGreen = hexToG(hex);\r\n\t\tconst hBlue = hexToB(hex);\r\n\t\tfunction hexToR(h) {return parseInt((cutHex(h)).substring(0,2),16)}\r\n\t\tfunction hexToG(h) {return parseInt((cutHex(h)).substring(2,4),16)}\r\n\t\tfunction hexToB(h) {return parseInt((cutHex(h)).substring(4,6),16)}\r\n\t\tfunction cutHex(h) {return (h.charAt(0) === '#') ? h.substring(1,7):h}\r\n\t\tconst cBrightness = ((hRed * 299) + (hGreen * 587) + (hBlue * 114)) / 1000;\r\n\t\tif (cBrightness > threshold){\r\n\t\t\treturn 'dark'\r\n\t\t} else { \r\n\t\t\treturn 'light'\r\n\t\t}\t\r\n\t}\r\n\r\n\t/**\r\n\t * Darken or lighten a hex color \r\n\t * @param {String} color - Hex color code e.g '#3e82f7'\r\n\t * @param {Number} percent - Percentage -100 to 100, positive for lighten, negative for darken\r\n\t * @return {String} Darken or lighten color \r\n\t */\r\n\tstatic shadeColor(color, percent) {\r\n\t\tlet R = parseInt(color.substring(1,3),16);\r\n\t\tlet G = parseInt(color.substring(3,5),16);\r\n\t\tlet B = parseInt(color.substring(5,7),16);\r\n\t\tR = parseInt(R * (100 + percent) / 100);\r\n\t\tG = parseInt(G * (100 + percent) / 100);\r\n\t\tB = parseInt(B * (100 + percent) / 100);\r\n\t\tR = (R<255)?R:255;  \r\n\t\tG = (G<255)?G:255;  \r\n\t\tB = (B<255)?B:255;  \r\n\t\tconst RR = ((R.toString(16).length === 1) ? `0${R.toString(16)}` : R.toString(16));\r\n\t\tconst GG = ((G.toString(16).length === 1) ? `0${G.toString(16)}` : G.toString(16));\r\n\t\tconst BB = ((B.toString(16).length === 1) ? `0${B.toString(16)}` : B.toString(16));\r\n\t\treturn `#${RR}${GG}${BB}`; \r\n\t}\r\n\r\n\t/**\r\n\t * Convert RGBA to HEX \r\n\t * @param {String} rgba - RGBA color code e.g 'rgba(197, 200, 198, .2)')'\r\n\t * @return {String} HEX color \r\n\t */\r\n\tstatic rgbaToHex(rgba) {\r\n\t\tconst trim = str => (str.replace(/^\\s+|\\s+$/gm,''))\r\n\t\tconst inParts = rgba.substring(rgba.indexOf(\"(\")).split(\",\"),\r\n\t\t\tr = parseInt(trim(inParts[0].substring(1)), 10),\r\n\t\t\tg = parseInt(trim(inParts[1]), 10),\r\n\t\t\tb = parseInt(trim(inParts[2]), 10),\r\n\t\t\ta = parseFloat(trim(inParts[3].substring(0, inParts[3].length - 1))).toFixed(2);\r\n\t\t\tconst outParts = [\r\n\t\t\tr.toString(16),\r\n\t\t\tg.toString(16),\r\n\t\t\tb.toString(16),\r\n\t\t\tMath.round(a * 255).toString(16).substring(0, 2)\r\n\t\t];\r\n\r\n\t\toutParts.forEach(function (part, i) {\r\n\t\t\tif (part.length === 1) {\r\n\t\t\t\toutParts[i] = '0' + part;\r\n\t\t\t}\r\n\t\t})\r\n\t\treturn (`#${outParts.join('')}`);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns either a positive or negative \r\n\t * @param {Number} number - number value\r\n\t * @param {any} positive - value that return when positive\r\n\t * @param {any} negative - value that return when negative\r\n\t * @return {any} positive or negative value based on param\r\n\t */\r\n\tstatic getSignNum(number, positive, negative) {\r\n\t\tif (number > 0) {\r\n\t\t\treturn positive\r\n\t\t}\r\n\t\tif (number < 0) {\r\n\t\t\treturn negative\r\n\t\t}\r\n\t\treturn null\r\n\t}\r\n\r\n\t/**\r\n\t * Returns either ascending or descending value\r\n\t * @param {Object} a - antd Table sorter param a\r\n\t * @param {Object} b - antd Table sorter param b\r\n\t * @param {String} key - object key for compare\r\n\t * @return {any} a value minus b value\r\n\t */\r\n\tstatic antdTableSorter(a, b, key) {\r\n\t\tif(typeof a[key] === 'number' && typeof b[key] === 'number') {\r\n\t\t\treturn a[key] - b[key]\r\n\t\t}\r\n\r\n\t\tif(typeof a[key] === 'string' && typeof b[key] === 'string') {\r\n\t\t\ta = a[key].toLowerCase();\r\n\t\t\tb = b[key].toLowerCase();\r\n\t\t\treturn a > b ? -1 : b > a ? 1 : 0;\r\n\t\t}\r\n\t\treturn\r\n\t}\r\n\r\n\t/**\r\n\t * Filter array of object \r\n\t * @param {Array} list - array of objects that need to filter\r\n\t * @param {String} key - object key target\r\n\t * @param {any} value  - value that excluded from filter\r\n\t * @return {Array} a value minus b value\r\n\t */\r\n\tstatic filterArray(list, key, value) {\r\n\t\tlet data = list\r\n\t\tif(list) {\r\n\t\t\tdata = list.filter(item => item[key] === value)\r\n\t\t}\r\n\t\treturn data\r\n\t}\r\n\r\n\t/**\r\n\t * Remove object from array by value\r\n\t * @param {Array} list - array of objects\r\n\t * @param {String} key - object key target\r\n\t * @param {any} value  - target value\r\n\t * @return {Array} Array that removed target object\r\n\t */\r\n\tstatic deleteArrayRow(list, key, value) {\r\n\t\tlet data = list\r\n\t\tif(list) {\r\n\t\t\tdata = list.filter(item => item[key] !== value)\r\n\t\t}\r\n\t\treturn data\r\n\t}\r\n\r\n\t/**\r\n\t * Wild card search on all property of the object\r\n\t * @param {Number | String} input - any value to search\r\n\t * @param {Array} list - array for search\r\n\t * @return {Array} array of object contained keyword\r\n\t */\r\n\tstatic wildCardSearch(list, input) {\r\n\t\tconst searchText = (item) => {\r\n\t\t\tfor (let key in item) {\r\n\t\t\t\tif (item[key] == null) {\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t\tif (item[key].toString().toUpperCase().indexOf(input.toString().toUpperCase()) !== -1) {\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\t\tlist = list.filter(value => searchText(value));\r\n\t\treturn list;\r\n\t}\r\n\r\n\t/**\r\n\t * Get Breakpoint\r\n\t * @param {Object} screens - Grid.useBreakpoint() from antd\r\n\t * @return {Array} array of breakpoint size\r\n\t */\r\n\tstatic getBreakPoint(screens) {\r\n\t\tlet breakpoints = []\r\n\t\tfor (const key in screens) {\r\n\t\t\tif (screens.hasOwnProperty(key)) {\r\n\t\t\t\tconst element = screens[key];\r\n\t\t\t\tif (element) {\r\n\t\t\t\t\tbreakpoints.push(key)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn breakpoints\r\n\t}\r\n}\r\n\r\nexport default Utils;"],"names":["Flex","styled","justifyContent","alignItems","flexDirection","gap","padding","margin","baseStyle","display","id","fallback","translate","t","useTranslation","Icon","this","props","type","className","React","Component","dashBoardNavTree","key","path","APP_PREFIX_PATH","title","icon","DashboardOutlined","breadcrumb","isGroupTitle","submenu","useBreakpoint","Grid","setLocale","localeKey","isLocaleOn","toString","setDefaultOpen","keyList","keyString","arr","split","index","length","elm","push","MenuItem","dispatch","useDispatch","isMobile","utils","includes","onClick","onMobileNavToggle","to","getSideNavMenuItem","navItem","map","nav","label","children","getTopNavMenuItem","SideNavContent","routeInfo","hideGroupTitle","sideNavTheme","useSelector","state","theme","menuItems","useMemo","navigationConfig","mode","SIDE_NAV_LIGHT","style","height","borderInlineEnd","defaultSelectedKeys","defaultOpenKeys","items","TopNavContent","topNavColor","backgroundColor","NAV_TYPE_SIDE","Sider","Layout","connect","navCollapsed","currentTheme","css","TEMPLATE","SIDE_NAV_DARK","GRAY_SCALE","DARK_MODE","width","SIDE_NAV_WIDTH","collapsed","autoHide","NAV_TYPE_TOP","LogoWrapper","transition","mobileLogo","logoType","navType","isNavTop","SIDE_NAV_COLLAPSED_WIDTH","getLogoWidthGutter","src","alt","APP_NAME","mobileNav","menuContentprops","onClose","placement","closable","open","bodyStyle","ArrowLeftOutlined","isDark","rgba","MEDIA_QUERIES","baseTheme","Profile","fontSize","FONT_SIZES","UserInfo","SPACER","Name","fontWeight","FONT_WEIGHT","Title","opacity","MenuItemSignOut","useFetchUser","data","isSuccess","useState","url","setUrl","useEffect","find","n","value","href","console","log","sessionStorage","removeItem","AUTH_TOKEN","name","setName","role","setRole","menu","trigger","headerNavColor","isDarkTheme","position","left","zIndex","flex","lineHeight","boxShadow","maxWidth","navWidth","right","marginLeft","setSearchActive","direction","navMode","navBgColor","toggleCollapsedNav","MenuUnfoldOutlined","MenuFoldOutlined","breadcrumbData","i","assignBreadcrumb","obj","forEach","BreadcrumbRoute","pathSnippets","useLocation","pathname","filter","breadcrumbItems","_","slice","join","AppBreadcrumb","Footer","BORDER","Date","getFullYear","e","preventDefault","Content","AppContent","AppLayout","location","currentRouteInfo","screens","isNavSide","getLayoutGutter","paddingLeft","paddingRight","Suspense","Loading","cover","locale","Utils","initials","match","shift","pop","toUpperCase","navTree","route","p","hasOwnProperty","getRouteInfo","hex","hRed","parseInt","cutHex","substring","hGreen","h","hexToG","hBlue","hexToB","charAt","color","percent","R","G","B","RR","GG","BB","trim","str","replace","inParts","indexOf","r","g","b","a","parseFloat","toFixed","outParts","Math","round","part","number","positive","negative","toLowerCase","list","item","input","searchText","breakpoints"],"sourceRoot":""}